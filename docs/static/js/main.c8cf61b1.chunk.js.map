{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","proptype","PropTypes","func","isRequired","getGifs","category","setImages","a","url","encodeURI","fetch","resp","json","data","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setstate","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"oNAGMA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAiBrC,OACI,uBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,KAElBO,QAAQC,IAAI,gBAIZ,UACI,6BAAKT,IACL,uBACIU,KAAK,OACLC,MAAOX,EACPY,SAnBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,cAwB/Bd,EAAYiB,SAAW,CACnBhB,cAAeiB,IAAUC,KAAKC,YAGnBpB,Q,+BCpCFqB,EAAO,uCAAG,WAAOC,EAAUC,GAAjB,qBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUJ,GAD7C,+DAEAK,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAHW,kBAIZA,EAAKC,KAAI,SAAAC,GAAQ,IAAD,EACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,SARvB,2CAAH,wDCoBLY,EAjBM,SAACf,GAAc,IAAD,EACLpB,mBAAS,CAC/B4B,KAAM,GACNQ,SAAS,IAHkB,mBACxBC,EADwB,KACjBC,EADiB,KAc/B,OARAC,qBAAU,WACNpB,EAAQC,GACHoB,MAAM,SAACC,GAAD,OAAUH,EAAS,CACtBV,KAAMa,EACNL,SAAS,SAElB,CAAChB,IAEGiB,GCLIK,EAVK,SAAC,GAAoB,IAAlBV,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAE1B,OACI,sBAAKoB,UAAU,yCAAf,UACI,qBAAKC,IAAKrB,EAAKsB,IAAKb,IACpB,4BAAIA,QCaDc,EAjBC,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAAc,EAEKe,EAAaf,GAAlCa,EAFgB,EAErBL,KAAcQ,EAFO,EAEPA,QAErB,OACI,qCACI,oBAAIO,UAAU,oCAAd,SAAmDvB,IACjDgB,GAAW,mBAAGO,UAAU,oCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEQV,EAAOJ,KAAI,SAACC,GAAD,OAAS,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aCa/CgB,EAtBM,WAAO,IAAD,EAEa/C,mBAAS,CAAC,oBAFvB,mBAEhBgD,EAFgB,KAEJjD,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQiD,EAAWnB,KAAI,SAACT,EAAU6B,GAAX,OACX,cAAC,EAAD,CAAS7B,SAAUA,GAAeA,Y,MCZ1D8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c8cf61b1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\n\nconst AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories( cats => [inputValue, ...cats] );\n            setInputValue('');\n        }\n        console.log('Submit Done');\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h1>{inputValue}</h1>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.proptype = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","export const getGifs = async (category, setImages) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=c3Q81qd4KHNujZDY2iIOetMK47Z9qY3g`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    return data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n}","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nconst useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then( (imgs) => setstate({\n                data: imgs,\n                loading: false,\n            }));\n    }, [category])\n\n    return state;\n}\n\nexport default useFetchGifs\n","import React from 'react'\n\nconst GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    );\n}\n\nexport default GifGridItem\n","import useFetchGifs from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({category}) => {\n\n    const {data:images , loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            { loading && <p className=\" animate__animated animate__flash\">Loading...</p> }\n            <div className=\"card-grid\">\n                {\n                    images.map((img) => <GifGridItem key={img.id} {...img}></GifGridItem> )\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import React, { useState } from 'react'\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Crash Bandicoot']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                {\n                    categories.map((category, i) => \n                        <GifGrid category={category} key={category}></GifGrid>\n                        // return <li key={ category }>{ category }</li>\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}